<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木木的小屋</title>
  
  <subtitle>活在当下</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-31T09:46:30.734Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>杜文丽</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习，神经网络基础 --持续更新中</title>
    <link href="http://yoursite.com/2018/08/30/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/"/>
    <id>http://yoursite.com/2018/08/30/神经网络基础-持续更新中/</id>
    <published>2018-08-30T13:18:41.000Z</published>
    <updated>2018-08-31T09:46:30.734Z</updated>
    
    <content type="html"><![CDATA[<p>CNN: 卷积输入向量 通过卷积核进行一定的运算（也叫做滤波器）进行输入的特征提取。</p><p>池化层：不影响质量的前提下进行压缩，减少参数，有maxPooling,AveragePooling。</p><p>Zero Padding补零操作使输出尺寸不变。</p><p>做完池化层之后，数据拍平Flatten层，然后放到全连接层，方便交给分类器进行分类。。。</p><p>机器学习术语：<a href="https://developers.google.com/machine-learning/crash-course/framing/ml-terminology" target="_blank" rel="noopener">https://developers.google.com/machine-learning/crash-course/framing/ml-terminology</a></p><p>平方损失（L2）损失</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">= the square of the difference between the label and the prediction</span><br><span class="line">= (observation - prediction(x))2</span><br><span class="line">= (y - y&apos;)2</span><br></pre></td></tr></table></figure><p><strong>均方误差</strong> (<strong>MSE</strong>) 指的是每个样本的平均平方损失。要计算 MSE，请求出各个样本的所有平方损失之和，然后除以样本数量：</p><p><img src="C:\Users\18749\AppData\Local\Temp\1535708482344.png" alt="1535708482344"></p><p>其中</p><ul><li>x 指的是模型进行预测时使用的特征集（例如，温度、年龄和交配成功率）。</li><li><p>y 指的是样本的标签（例如，每分钟的鸣叫次数）。</p></li><li><p>prediction(x) 指的是权重和偏差与特征集 x 结合的函数。</p></li><li>D 指的是包含多个有标签样本（即 (x,y)）的数据集。</li><li>N 指的是 D 中的样本数量</li></ul><p>降低损失的方法</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CNN: 卷积输入向量 通过卷积核进行一定的运算（也叫做滤波器）进行输入的特征提取。&lt;/p&gt;
&lt;p&gt;池化层：不影响质量的前提下进行压缩，减少参数，有maxPooling,AveragePooling。&lt;/p&gt;
&lt;p&gt;Zero Padding补零操作使输出尺寸不变。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow解决overfitting</title>
    <link href="http://yoursite.com/2018/08/30/TensorFlow%E8%A7%A3%E5%86%B3overfitting/"/>
    <id>http://yoursite.com/2018/08/30/TensorFlow解决overfitting/</id>
    <published>2018-08-30T09:03:03.000Z</published>
    <updated>2018-08-30T09:28:01.781Z</updated>
    
    <content type="html"><![CDATA[<p>首先理解dropout</p><p>对于神经网络单元，按照一定比例的概率将其暂时从网络中丢弃。目的就是为了防止过拟合。</p><p>每次做完dropout，相当于从原始的网络中找到一个更瘦的网络。在每次训练的时候，让一半的特征检测器停止工作，提高网络的泛化能力。</p><p>在向前传导的时候，让某个神经元的激活值以一定的概率p让其停止工作</p><p><img src="a.png" alt=""></p><p>看了那么多，我好像只能看懂这些，等到以后看懂更多的时候再来补充吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先理解dropout&lt;/p&gt;
&lt;p&gt;对于神经网络单元，按照一定比例的概率将其暂时从网络中丢弃。目的就是为了防止过拟合。&lt;/p&gt;
&lt;p&gt;每次做完dropout，相当于从原始的网络中找到一个更瘦的网络。在每次训练的时候，让一半的特征检测器停止工作，提高网络的泛化能力。&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="TensorFlow" scheme="http://yoursite.com/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow 基础</title>
    <link href="http://yoursite.com/2018/08/30/TensorFlow-%E5%BC%A0%E9%87%8F%EF%BC%8C%E5%8F%98%E9%87%8F/"/>
    <id>http://yoursite.com/2018/08/30/TensorFlow-张量，变量/</id>
    <published>2018-08-30T07:11:17.000Z</published>
    <updated>2018-08-31T09:36:34.016Z</updated>
    
    <content type="html"><![CDATA[<p>原博客链接：<a href="https://www.jianshu.com/p/d9ab35b56ab8" target="_blank" rel="noopener">https://www.jianshu.com/p/d9ab35b56ab8</a></p><p>TensorFlow.js官网api <a href="https://js.tensorflow.org/api" target="_blank" rel="noopener">https://js.tensorflow.org/api</a></p><p>python的参考文档：<a href="https://www.tensorflow.org/api_docs/python/tf" target="_blank" rel="noopener">https://www.tensorflow.org/api_docs/python/tf</a></p><p>TensorFlow.js例子<a href="https://js.tensorflow.org/tutorials/fit-curve.html" target="_blank" rel="noopener">https://js.tensorflow.org/tutorials/fit-curve.html</a></p><p>张量：值不可变tf.tensor</p><p>0阶张量为标量</p><p>1阶张量为向量</p><p>2阶张量为矩阵</p><p>3阶张量为体积（暂且这样说吧）</p><p><img src="a.png" alt=""></p><p>变量 ：tf.Variable  用一个张量值来初始化的，可用assign方法给一个存在的变量分配一个新张量，值可变。用于模型训练时候，数据的保存和更新.变量通常贯穿于机器学习模型的整个生命周期中，在 TensorFlow.js 中，即使是在 tf.tidy 里创建，js也不会清理它们；但是，你可以手动调用 dispose。</p><p>有了变量必须还要使用tf.initialize_all_variables()来初始化变量。</p><p><img src="b.png" alt=""></p><p>操作：operations(ops) 操作张量，返回新张量，原张量值不变</p><p>有square，add，sub等，支持嵌套操作</p><p><code>tf.tidy</code> 执行后就会清除所有中间新建的 tensors 来达到释放 GPU 内存，但不会消除内部的返回值。</p><p>模型和层：一个函数及一个模型，给定相应输入得到期望输出</p><p>tf.mode是一个模型，可以是线性模型，有了模型以后就可以往里面添加层</p><p>tf.sequential 一层的输入是下一层的输出，拓扑排序是线性的栈</p><p><img src="c.png" alt=""></p><p>tf.layers.dense 全连接层，添加一个层，即初学的add_layer()函数</p><p>dense(<br>    inputs,<br>    units,<br>    activation=None,<br>    use_bias=True,<br>    kernel_initializer=None,<br>    bias_initializer=tf.zeros_initializer(),<br>    kernel_regularizer=None,<br>    bias_regularizer=None,<br>    activity_regularizer=None,<br>    trainable=True,<br>    name=None,<br>    reuse=None<br>)</p><p>inputs: 输入数据，2维tensor. </p><p>units: 该层的神经单元结点数。</p><p>inputshape：[1,2,3]的shape是(3,);一个二阶的张量[[1,2,3],[4,5,6]]的shape是(2,3);一个三阶的张量[[[1],[2],[3]],[[4],[5],[6]]]的shape是(2,3,1)  </p><p>activation: 激活函数.</p><p>use_bias: Boolean型，是否使用偏置项.  </p><p>kernel_initializer: 卷积核的初始化器. </p><p>bias_initializer: 偏置项的初始化器，默认初始化为0. </p><p>kernel_regularizer: 卷积核化的正则化，可选. </p><p>bias_regularizer: 偏置项的正则化，可选.  </p><p>activity_regularizer: 输出的正则化函数.  </p><p>trainable: Boolean型，表明该层的参数是否参与训练。如果为真则变量加入到图集合中 GraphKeys.TRAINABLE_VARIABLES (see tf.Variable).  </p><p>name: 层的名字. </p><p>reuse: Boolean型, 是否重复使用参数.</p><p>tf.Session相当于一个指针，指针指着什么，就能查看什么或者使哪一个运行起来。</p><p>tf.placeholder 占位符，输入变量暂存的地方。</p><p>tf.feed_dict 字典填充函数，使输入输出变得简单</p><p><img src="d.png" alt=""></p><p>cross_entropy 交叉熵，用来衡量人工神经网络ANN的预测值与实际值的一种方式。</p><p>交叉熵代价函数：<img src="e.jpg" alt=""></p><p><img src="f.jpg" alt=""></p><p><img src="g.jpg" alt=""></p><p>好吧没看懂，总之训练效果比二次代价函数要好。完毕！</p><p>as for training model, we need to do three things first</p><ul><li><p>A <em>loss function</em>, which measures how well a given polynomial fits the data. The lower the loss value, the better the polynomial fits the data.</p></li><li><p>An <em>optimizer</em>, which implements an algorithm for revising our coefficient values based on the output of the loss function. The optimizer’s goal is to minimize the output value of the loss function.</p></li><li><p>A <em>training loop</em>, which will iteratively run the optimizer to minimize loss.</p></li></ul><p>  minimize最神奇的地方，自动调整参数诶，哇哦</p><p><img src="C:\Users\18749\AppData\Local\Temp\1535707394705.png" alt="1535707394705"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原博客链接：&lt;a href=&quot;https://www.jianshu.com/p/d9ab35b56ab8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.jianshu.com/p/d9ab35b56ab8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;T
      
    
    </summary>
    
    
      <category term="TensorFlow" scheme="http://yoursite.com/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>matlab 常用函数使用及示例</title>
    <link href="http://yoursite.com/2018/08/26/matlab-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E5%8F%8A%E7%A4%BA%E4%BE%8B/"/>
    <id>http://yoursite.com/2018/08/26/matlab-常用函数使用及示例/</id>
    <published>2018-08-26T10:42:55.000Z</published>
    <updated>2018-08-26T15:26:13.031Z</updated>
    
    <content type="html"><![CDATA[<p>注：matlab中所有的表达式都需要写成&lt;=的形式再带入。</p><p>解决线性问题常用函数 linprog  用法</p><p><img src="a.png" alt=""></p><p><img src="b.png" alt=""></p><p><img src="c.png" alt=""></p><p><img src="d.png" alt=""></p><p>结果</p><p><img src="e.png" alt=""></p><p>matlab一维差值 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;注：matlab中所有的表达式都需要写成&amp;lt;=的形式再带入。&lt;/p&gt;
&lt;p&gt;解决线性问题常用函数 linprog  用法&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;a.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;b.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;im
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>数学建模</title>
    <link href="http://yoursite.com/2018/08/24/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    <id>http://yoursite.com/2018/08/24/数学建模/</id>
    <published>2018-08-24T02:32:25.000Z</published>
    <updated>2018-08-24T10:28:06.616Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：写论文做了什么事情，采用何种方法，解决了什么问题，得到了什么结果。问题1,2,3分开写。忌讳：1.背景说了一大堆。2.用matlab什么函数balabala！</p><p>问题重述：不能简单抄问题。把原来的问题，用自己的话描述，话语倾向于用何种方法解决，有侧重。一定要有！</p><p>做两件事情：1.构建数学模型。2.拟合。</p><p>最小二乘法：处理大批量离散的数据。</p><p>插值：经过所有的数据点，少量数据适用。低次、多元函数。</p><p>拟合：大量数据适用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;摘要：写论文做了什么事情，采用何种方法，解决了什么问题，得到了什么结果。问题1,2,3分开写。忌讳：1.背景说了一大堆。2.用matlab什么函数balabala！&lt;/p&gt;
&lt;p&gt;问题重述：不能简单抄问题。把原来的问题，用自己的话描述，话语倾向于用何种方法解决，有侧重。一定
      
    
    </summary>
    
    
      <category term="数学建模" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>程序静态连接、动态链接</title>
    <link href="http://yoursite.com/2018/08/23/%E7%A8%8B%E5%BA%8F%E9%9D%99%E6%80%81%E8%BF%9E%E6%8E%A5%E3%80%81%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5/"/>
    <id>http://yoursite.com/2018/08/23/程序静态连接、动态链接/</id>
    <published>2018-08-23T10:22:09.000Z</published>
    <updated>2018-08-23T11:59:21.161Z</updated>
    
    <content type="html"><![CDATA[<p>源代码到可执行文件过程：预编译（生成.i。处理源代码中以#开始的u、预编译指令，展开宏定义，删注释，递归包含头文件，加行号和文件名标识。详见P39），编译（生成.s。将预编译文件进行词法、语法、语义分析，优化生成汇编代码），汇编（生成.o。将汇编代码转换成机器可执行指令），链接（多个不同的目标文件之间相互粘到一起）。</p><p>静态链接：</p><p>所有的程序模块都链接成一个单独的可执行文件。由链接器在链接时将库的内容加入到可执行程序中的做法。浪费空间。是程序用一个链接一个，不知道共享的那种。发布时也会引入不同版本的操作系统需编写不同的链接程序。</p><p>动态链接：</p><p>程序的模块分隔成独立的文件，等程序要运行的时候才链接。链接过程推迟到运行时刻。有共享对象（linux：.so  windows：.dll）。延迟绑定。下面是例子</p><p>源代码如下，需要四个文件 Lib.c Lib.h Program1.c Program2.c</p><p><img src="a.png" alt=""></p><p><img src="b.png" alt=""></p><p>通过如下指令生成Lib.so共享对象</p><p><img src="c.png" alt=""></p><p>编译Program1.c和Program2.c</p><p><img src="d.png" alt=""></p><p>Program1的编译链接过程</p><p><img src="e.png" alt="编译和链接过程"></p><p>静态链接时，这一步会把Program1.o和Lib.o链接到一起，产生输出可执行文件Program1.</p><p>动态链接时，Lib.o没有链接进来，链接的输入目标文件只有Program1.o  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;源代码到可执行文件过程：预编译（生成.i。处理源代码中以#开始的u、预编译指令，展开宏定义，删注释，递归包含头文件，加行号和文件名标识。详见P39），编译（生成.s。将预编译文件进行词法、语法、语义分析，优化生成汇编代码），汇编（生成.o。将汇编代码转换成机器可执行指令），
      
    
    </summary>
    
    
      <category term="装载" scheme="http://yoursite.com/tags/%E8%A3%85%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>木木的日常</title>
    <link href="http://yoursite.com/2018/08/23/%E6%9C%A8%E6%9C%A8%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    <id>http://yoursite.com/2018/08/23/木木的日常/</id>
    <published>2018-08-23T08:25:16.000Z</published>
    <updated>2018-08-23T08:41:23.944Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚装系统，噗，不知怎么的，把centos装到U盘里面了，U盘插上就能打开，U盘关了就找不到centos了，只剩下孤零零的Ubuntu。但是还是上不了网。很无奈。</p><p>今早，折腾了一上午，无果，想想还是算了吧，把它拿到修电脑的地方去修好了。我也没办法了，谁叫自己这么菜呢。以后再说吧。</p><p>昨晚搞得3点过才睡，发现哭真的能发泄情绪诶，难过的时候哭出来，过一会儿就不难过了，早上眼睛还是肿肿的。嗨呀，就不要再想啦，好好爱自己，熬过这关就好了。想家，想妈妈。</p><p>还有好多事情还没做。大创，毛概，linux shell，学术研究书，程序员的自我修养。这些都是暑假应该完成的东西，我一样都没有完成。但是，事情总是慢慢来的嘛，一件一件地把事情做好，就好啦！</p><p>木木真傻，傻傻的才会更开心，嗯，那就继续傻下去吧。</p><p>好了，我要开始写毛概了，大创的话，任务布置下来再说吧。</p><p>事情，要一件一件的去完成！</p><p><img src="a.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨晚装系统，噗，不知怎么的，把centos装到U盘里面了，U盘插上就能打开，U盘关了就找不到centos了，只剩下孤零零的Ubuntu。但是还是上不了网。很无奈。&lt;/p&gt;
&lt;p&gt;今早，折腾了一上午，无果，想想还是算了吧，把它拿到修电脑的地方去修好了。我也没办法了，谁叫自己这
      
    
    </summary>
    
    
      <category term="日常" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode Longest Palindromic Substring题解</title>
    <link href="http://yoursite.com/2018/08/22/LeetCode-Longest-Palindromic-Substring%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/08/22/LeetCode-Longest-Palindromic-Substring题解/</id>
    <published>2018-08-22T12:04:12.000Z</published>
    <updated>2018-08-22T12:13:09.369Z</updated>
    
    <content type="html"><![CDATA[<p>思考这个问题，最初的想法是把所有的解都尝试一遍，然后找出最长的回文字符串，于是，我就用了递归，跑了一遍最初的实例，跑通了，然后很开心的去提交。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SolutionLongestPalindromicSubstring</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindromic</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> length=s.length();</span><br><span class="line">        <span class="keyword">int</span> pl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pr=length<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (pl&lt;pr)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.at(pl)!=s.at(pr))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            pl++;</span><br><span class="line">            pr--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.length()==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> length=s.length();</span><br><span class="line">        <span class="keyword">int</span> pl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pr=length;</span><br><span class="line">        <span class="keyword">if</span> (pr&gt;=pl&amp;&amp;isPalindromic(s.substr(pl,(pr-pl))))&#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> currpl=pl;</span><br><span class="line">        <span class="keyword">int</span> currpr=pr;</span><br><span class="line">        <span class="built_in">string</span> max=<span class="string">""</span>;</span><br><span class="line">        <span class="built_in">string</span> temp=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>((++currpl)&lt;=pr)&#123;</span><br><span class="line">            temp=max=longestPalindrome(s.substr(currpl,currpr-currpl));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(temp.length()&gt;max.length())</span><br><span class="line">            max=temp;</span><br><span class="line">        currpl=pl;</span><br><span class="line">        currpr=pr;</span><br><span class="line">        <span class="keyword">if</span>((--currpr)&gt;=currpl)&#123;</span><br><span class="line">            temp=longestPalindrome(s.substr(currpl,currpr-currpl));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(temp.length()&gt;max.length())</span><br><span class="line">            max=temp;</span><br><span class="line">        currpl=pl+<span class="number">1</span>;</span><br><span class="line">        currpr=pr<span class="number">-1</span>;</span><br><span class="line">        temp=longestPalindrome(s.substr(currpl,currpr-currpl));</span><br><span class="line">        <span class="keyword">if</span>(temp.length()&gt;max.length())</span><br><span class="line">            max=temp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>结果，哦吼，超时了。</p><p>是啊，递归的复杂度太高了，然后，如果是我，肯定是从大的开始找啊。</p><p>顺着这个思路，再加上子串肯定是连续的，这么一想，然后就自动的去捆绑子串。</p><p>首先捆绑的子串的长度就是原串本身，如果是回文，则最长的子串就找到啦。</p><p>如果捆绑串不是回文，则捆绑的长度-1，再从左往右移动，依次检验当前捆绑串是否是回文子串</p><p>重复上诉步骤，肯定能找到回文串，毕竟一个字符也是回文子串嘛</p><p>贴代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SolutionLongestPalindromicSubstring</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindromic</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> length=s.length();</span><br><span class="line">        <span class="keyword">int</span> pl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pr=length<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (pl&lt;pr)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.at(pl)!=s.at(pr))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            pl++;</span><br><span class="line">            pr--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isPalindromic(s))</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> maxLength=s.length()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> length=s.length();</span><br><span class="line">        <span class="keyword">int</span> pl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (maxLength&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span> (pl+maxLength&lt;=length)&#123;</span><br><span class="line">                <span class="keyword">if</span>(isPalindromic(s.substr(pl,maxLength)))&#123;</span><br><span class="line">                    <span class="keyword">return</span> s.substr(pl,maxLength);</span><br><span class="line">                &#125;</span><br><span class="line">                pl++;</span><br><span class="line">            &#125;</span><br><span class="line">            maxLength--;</span><br><span class="line">            pl=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substr(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>代码地址:</p><p><a href="https://github.com/DuWenLi-mumu/LeetCodeSolution/blob/master/Longest%20Palindromic%20Substring.cpp" target="_blank" rel="noopener">https://github.com/DuWenLi-mumu/LeetCodeSolution/blob/master/Longest%20Palindromic%20Substring.cpp</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;思考这个问题，最初的想法是把所有的解都尝试一遍，然后找出最长的回文字符串，于是，我就用了递归，跑了一遍最初的实例，跑通了，然后很开心的去提交。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>木木的日常--注册账号</title>
    <link href="http://yoursite.com/2018/08/22/%E6%9C%A8%E6%9C%A8%E7%9A%84%E6%97%A5%E5%B8%B8-%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7/"/>
    <id>http://yoursite.com/2018/08/22/木木的日常-注册账号/</id>
    <published>2018-08-22T09:34:16.000Z</published>
    <updated>2018-08-22T12:01:45.211Z</updated>
    
    <content type="html"><![CDATA[<p>昨天，浏览了一下Tuts 4 You 也就是这个网站 <a href="https://tuts4you.com/" target="_blank" rel="noopener">https://tuts4you.com/</a><br>虽然不怎么看得懂，但发现里面好像有很多资源可以下载，于是就想，那就注册个账号嘛，多简单的事情！<br>然后，就开始了我的注册账号之旅，这可以说是我最难的一次注册账号的经历！<br>填好了基本信息，然后发现了一个搞笑的问题<br><img src="/2018/08/22/木木的日常-注册账号/a.jpg" title="figure1"><br>额，好吧，白活二十年！<br>接下来，下面这个问题，直接蒙了<br><img src="/2018/08/22/木木的日常-注册账号/b.jpg" title="figure2"><br>这是啥玩意儿，搜索了一下，原来是八进制的字符串匹配，噗，本来还想一个一个手工匹配，刚刚开始就放弃了。。。<br>算了，还是写个程序吧，，，<br>然后就开始了疯狂的复制粘贴匹配段之旅<br><img src="/2018/08/22/木木的日常-注册账号/c.jpg" title="figure3"><br>最后这段是什么意思呢？？？<br>程序运行出来是这样的<br><img src="/2018/08/22/木木的日常-注册账号/d.jpg" title="figure4"><br>噗 我TM还是不知道是什么意思，还是选择继续百度<br>百度结果如下，无果，切换成google<br><img src="/2018/08/22/木木的日常-注册账号/e.jpg" title="figure5"><br>google果然更好用，找到答案了<br><img src="/2018/08/22/木木的日常-注册账号/f.jpg" title="figure6"><br>噗，赶紧填进去，，，终于<br>注册成功了<br>其实中间还有选择下列图片中哪些是车，哪些是路，选错重来。<br>噗，直接崩溃，还好TM是写的程序，不然，，，，凭借我的耐心，我是别想注册账号了<br>登陆看看<br><img src="/2018/08/22/木木的日常-注册账号/g.jpg" title="figure7"></p><p>以后会经常浏览这个网站，这可是我花了一个多小时才注册的账号啊！！！！嘤嘤嘤！！！<br>代码地址:</p><p><a href="https://github.com/DuWenLi-mumu/CPlusPlusLearn/blob/master/decode8system.cpp" target="_blank" rel="noopener">https://github.com/DuWenLi-mumu/CPlusPlusLearn/blob/master/decode8system.cpp</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天，浏览了一下Tuts 4 You 也就是这个网站 &lt;a href=&quot;https://tuts4you.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://tuts4you.com/&lt;/a&gt;&lt;br&gt;虽然不怎么看得懂，但发现里面好像有很
      
    
    </summary>
    
    
      <category term="木木的日常" scheme="http://yoursite.com/tags/%E6%9C%A8%E6%9C%A8%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>my-first-blog</title>
    <link href="http://yoursite.com/2018/08/19/my-first-blog/"/>
    <id>http://yoursite.com/2018/08/19/my-first-blog/</id>
    <published>2018-08-19T11:23:23.000Z</published>
    <updated>2018-08-22T08:14:09.220Z</updated>
    
    <content type="html"><![CDATA[<p>木木的第一篇博客<br>额。。。。怎么说呢，欢迎来到木木的小屋！<br>哈哈哈！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;木木的第一篇博客&lt;br&gt;额。。。。怎么说呢，欢迎来到木木的小屋！&lt;br&gt;哈哈哈！&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="just for fun" scheme="http://yoursite.com/tags/just-for-fun/"/>
    
  </entry>
  
</feed>
