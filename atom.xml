<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木木的小屋</title>
  
  <subtitle>活在当下</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-22T12:13:09.369Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>杜文丽</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode Longest Palindromic Substring题解</title>
    <link href="http://yoursite.com/2018/08/22/LeetCode-Longest-Palindromic-Substring%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/08/22/LeetCode-Longest-Palindromic-Substring题解/</id>
    <published>2018-08-22T12:04:12.000Z</published>
    <updated>2018-08-22T12:13:09.369Z</updated>
    
    <content type="html"><![CDATA[<p>思考这个问题，最初的想法是把所有的解都尝试一遍，然后找出最长的回文字符串，于是，我就用了递归，跑了一遍最初的实例，跑通了，然后很开心的去提交。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SolutionLongestPalindromicSubstring</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindromic</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> length=s.length();</span><br><span class="line">        <span class="keyword">int</span> pl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pr=length<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (pl&lt;pr)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.at(pl)!=s.at(pr))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            pl++;</span><br><span class="line">            pr--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.length()==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> length=s.length();</span><br><span class="line">        <span class="keyword">int</span> pl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pr=length;</span><br><span class="line">        <span class="keyword">if</span> (pr&gt;=pl&amp;&amp;isPalindromic(s.substr(pl,(pr-pl))))&#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> currpl=pl;</span><br><span class="line">        <span class="keyword">int</span> currpr=pr;</span><br><span class="line">        <span class="built_in">string</span> max=<span class="string">""</span>;</span><br><span class="line">        <span class="built_in">string</span> temp=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>((++currpl)&lt;=pr)&#123;</span><br><span class="line">            temp=max=longestPalindrome(s.substr(currpl,currpr-currpl));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(temp.length()&gt;max.length())</span><br><span class="line">            max=temp;</span><br><span class="line">        currpl=pl;</span><br><span class="line">        currpr=pr;</span><br><span class="line">        <span class="keyword">if</span>((--currpr)&gt;=currpl)&#123;</span><br><span class="line">            temp=longestPalindrome(s.substr(currpl,currpr-currpl));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(temp.length()&gt;max.length())</span><br><span class="line">            max=temp;</span><br><span class="line">        currpl=pl+<span class="number">1</span>;</span><br><span class="line">        currpr=pr<span class="number">-1</span>;</span><br><span class="line">        temp=longestPalindrome(s.substr(currpl,currpr-currpl));</span><br><span class="line">        <span class="keyword">if</span>(temp.length()&gt;max.length())</span><br><span class="line">            max=temp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>结果，哦吼，超时了。</p><p>是啊，递归的复杂度太高了，然后，如果是我，肯定是从大的开始找啊。</p><p>顺着这个思路，再加上子串肯定是连续的，这么一想，然后就自动的去捆绑子串。</p><p>首先捆绑的子串的长度就是原串本身，如果是回文，则最长的子串就找到啦。</p><p>如果捆绑串不是回文，则捆绑的长度-1，再从左往右移动，依次检验当前捆绑串是否是回文子串</p><p>重复上诉步骤，肯定能找到回文串，毕竟一个字符也是回文子串嘛</p><p>贴代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SolutionLongestPalindromicSubstring</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindromic</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> length=s.length();</span><br><span class="line">        <span class="keyword">int</span> pl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pr=length<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (pl&lt;pr)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.at(pl)!=s.at(pr))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            pl++;</span><br><span class="line">            pr--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isPalindromic(s))</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> maxLength=s.length()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> length=s.length();</span><br><span class="line">        <span class="keyword">int</span> pl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (maxLength&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span> (pl+maxLength&lt;=length)&#123;</span><br><span class="line">                <span class="keyword">if</span>(isPalindromic(s.substr(pl,maxLength)))&#123;</span><br><span class="line">                    <span class="keyword">return</span> s.substr(pl,maxLength);</span><br><span class="line">                &#125;</span><br><span class="line">                pl++;</span><br><span class="line">            &#125;</span><br><span class="line">            maxLength--;</span><br><span class="line">            pl=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substr(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>代码地址:</p><p><a href="https://github.com/DuWenLi-mumu/LeetCodeSolution/blob/master/Longest%20Palindromic%20Substring.cpp" target="_blank" rel="noopener">https://github.com/DuWenLi-mumu/LeetCodeSolution/blob/master/Longest%20Palindromic%20Substring.cpp</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;思考这个问题，最初的想法是把所有的解都尝试一遍，然后找出最长的回文字符串，于是，我就用了递归，跑了一遍最初的实例，跑通了，然后很开心的去提交。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>木木的日常--注册账号</title>
    <link href="http://yoursite.com/2018/08/22/%E6%9C%A8%E6%9C%A8%E7%9A%84%E6%97%A5%E5%B8%B8-%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7/"/>
    <id>http://yoursite.com/2018/08/22/木木的日常-注册账号/</id>
    <published>2018-08-22T09:34:16.000Z</published>
    <updated>2018-08-22T12:01:45.211Z</updated>
    
    <content type="html"><![CDATA[<p>昨天，浏览了一下Tuts 4 You 也就是这个网站 <a href="https://tuts4you.com/" target="_blank" rel="noopener">https://tuts4you.com/</a><br>虽然不怎么看得懂，但发现里面好像有很多资源可以下载，于是就想，那就注册个账号嘛，多简单的事情！<br>然后，就开始了我的注册账号之旅，这可以说是我最难的一次注册账号的经历！<br>填好了基本信息，然后发现了一个搞笑的问题<br><img src="/2018/08/22/木木的日常-注册账号/a.jpg" title="figure1"><br>额，好吧，白活二十年！<br>接下来，下面这个问题，直接蒙了<br><img src="/2018/08/22/木木的日常-注册账号/b.jpg" title="figure2"><br>这是啥玩意儿，搜索了一下，原来是八进制的字符串匹配，噗，本来还想一个一个手工匹配，刚刚开始就放弃了。。。<br>算了，还是写个程序吧，，，<br>然后就开始了疯狂的复制粘贴匹配段之旅<br><img src="/2018/08/22/木木的日常-注册账号/c.jpg" title="figure3"><br>最后这段是什么意思呢？？？<br>程序运行出来是这样的<br><img src="/2018/08/22/木木的日常-注册账号/d.jpg" title="figure4"><br>噗 我TM还是不知道是什么意思，还是选择继续百度<br>百度结果如下，无果，切换成google<br><img src="/2018/08/22/木木的日常-注册账号/e.jpg" title="figure5"><br>google果然更好用，找到答案了<br><img src="/2018/08/22/木木的日常-注册账号/f.jpg" title="figure6"><br>噗，赶紧填进去，，，终于<br>注册成功了<br>其实中间还有选择下列图片中哪些是车，哪些是路，选错重来。<br>噗，直接崩溃，还好TM是写的程序，不然，，，，凭借我的耐心，我是别想注册账号了<br>登陆看看<br><img src="/2018/08/22/木木的日常-注册账号/g.jpg" title="figure7"></p><p>以后会经常浏览这个网站，这可是我花了一个多小时才注册的账号啊！！！！嘤嘤嘤！！！<br>代码地址:</p><p><a href="https://github.com/DuWenLi-mumu/CPlusPlusLearn/blob/master/decode8system.cpp" target="_blank" rel="noopener">https://github.com/DuWenLi-mumu/CPlusPlusLearn/blob/master/decode8system.cpp</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天，浏览了一下Tuts 4 You 也就是这个网站 &lt;a href=&quot;https://tuts4you.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://tuts4you.com/&lt;/a&gt;&lt;br&gt;虽然不怎么看得懂，但发现里面好像有很
      
    
    </summary>
    
    
      <category term="木木的日常" scheme="http://yoursite.com/tags/%E6%9C%A8%E6%9C%A8%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>my-first-blog</title>
    <link href="http://yoursite.com/2018/08/19/my-first-blog/"/>
    <id>http://yoursite.com/2018/08/19/my-first-blog/</id>
    <published>2018-08-19T11:23:23.000Z</published>
    <updated>2018-08-22T08:14:09.220Z</updated>
    
    <content type="html"><![CDATA[<p>木木的第一篇博客<br>额。。。。怎么说呢，欢迎来到木木的小屋！<br>哈哈哈！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;木木的第一篇博客&lt;br&gt;额。。。。怎么说呢，欢迎来到木木的小屋！&lt;br&gt;哈哈哈！&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="just for fun" scheme="http://yoursite.com/tags/just-for-fun/"/>
    
  </entry>
  
</feed>
